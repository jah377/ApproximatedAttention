#!/bin/bash
#SBATCH --job-name="dgl_SIGNff"
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=01:00:00
#SBATCH --gpus=1
#SBATCH --partition=gpu_shared
#SBATCH --output=%x.%j.out

echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo 'NOTES: get SIGNff to RUN'
echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo 

EXPERIMENT_FOLDER='dgl_SIGNff'

date;hostname;id;pwd
START=`date +%s`                # will record .job runtime

# variables
FOLDER=$EXPERIMENT_FOLDER'_run'
num_runs=1
num_workers=1


# copy files to scratch
rm -rf $TMPDIR/$FOLDER
mkdir -p $TMPDIR/$FOLDER/data
cp -r data/arxiv.pth $TMPDIR/$FOLDER/data
cp -r data/products.pth $TMPDIR/$FOLDER/data
cp -r general venvs $TMPDIR/$FOLDER
cp -r experiments/$EXPERIMENT_FOLDER/* $TMPDIR/$FOLDER
cd $TMPDIR/$FOLDER
echo ' -- FILES COPIED'


# activate venv
module load 2021
module load CUDA/11.3.1
source $TMPDIR/$FOLDER/venvs/GPU_venv/bin/activate
which python
echo ' -- VENV ACTIVATED'

echo ''
echo 'Check if packages installed correctly'
python -c "import torch; print(f'Torch: {torch.__version__}')"
python -c "import torch_geometric; print(f'PyG: {torch_geometric.__version__}')"
echo ''

    parser = argparse.ArgumentParser(description='SIGN')
    parser.add_argument('--SEED', type=int, default=42)
    parser.add_argument('--EPOCHS', type=int, default=1000)
    parser.add_argument('--HIDDEN_CHANNEL', type=int, default=512)
    parser.add_argument('--K', type=int, default=5)
    parser.add_argument('--LR', type=float, default=0.001)
    parser.add_argument('--DATASET', type=str, default='arxiv')
    parser.add_argument('--DROPOUT', type=float, default=0.5)
    parser.add_argument('--WEIGHT_DECAY', type=float, default=0)
    parser.add_argument('--TRAIN_BATCH_SIZE', type=int, default=50000)
    parser.add_argument('--EVAL_BATCH_SIZE', type=int, default=100000)
    parser.add_argument('--N_FFLAYERS', type=int, default=2)
    parser.add_argument('--INPUT_DROPOUT', type=float, default=0)

# ARXIV
python dgl_SIGN.py \
    --SEED 42 \
    --EPOCHS 1000 \
    --HIDDEN_CHANNEL 512 \
    --K 5 \
    --LR 0.001 \
    --DATASET 'arxiv' \
    --DROPOUT 0.5 \
    --WEIGHT_DECAY 0.0 \
    --TRAIN_BATCH_SIZE 50000 \
    --EVAL_BATCH_SIZE 100000 \
    --N_FFLAYERS 2 \
    --INPUT_DROPOUT 0


# PRODUCTS
python dgl_SIGN.py \
    --SEED 42 \
    --EPOCHS 1000 \
    --HIDDEN_CHANNEL 512 \
    --K 5 \
    --LR 0.001 \
    --DATASET 'arxiv' \
    --DROPOUT 0.5 \
    --WEIGHT_DECAY 0.0 \
    --TRAIN_BATCH_SIZE 50000 \
    --EVAL_BATCH_SIZE 100000 \
    --N_FFLAYERS 2 \
    --INPUT_DROPOUT 0


echo '++++++++++++++++++++++++++++++++++++++++++++++++++++'
END=`date +%s`;

let DIFF=END-START
let HOURS=DIFF/3600
let MINUTES=(DIFF/60)%60

printf 'TOTAL RUNTIME = %d hours %02d minutes\n' $HOURS $MINUTES
echo '++++++++++++++++++++++++++++++++++++++++++++++++++++'