#!/bin/bash
#SBATCH --job-name="dgl_SIGNff_NoBatchNorm"
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --time=06:00:00
#SBATCH --gpus=1
#SBATCH --partition=gpu_shared
#SBATCH --output=%x.%j.out

echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo 'NOTES: get SIGNff to RUN'
echo '~~~~~~~~~~~~~~~~~~~~~~~~~~~~'
echo 

EXPERIMENT_FOLDER='SIGNff'

date;hostname;id;pwd
START=`date +%s`                # will record .job runtime

# variables
FOLDER=$EXPERIMENT_FOLDER'_run'
num_runs=1
num_workers=1


# copy files to scratch
rm -rf $TMPDIR/$FOLDER
mkdir -p $TMPDIR/$FOLDER/data
cp -r data/* $TMPDIR/$FOLDER/data
cp -r general venvs $TMPDIR/$FOLDER
cp -r experiments/$EXPERIMENT_FOLDER/* $TMPDIR/$FOLDER
cd $TMPDIR/$FOLDER
echo ' -- FILES COPIED'


# activate venv
module load 2021
module load CUDA/11.3.1
source $TMPDIR/$FOLDER/venvs/GPU_venv/bin/activate
which python
echo ' -- VENV ACTIVATED'

echo ''
echo 'Check if packages installed correctly'
python -c "import torch; print(f'Torch: {torch.__version__}')"
python -c "import torch_geometric; print(f'PyG: {torch_geometric.__version__}')"
echo ''

# ARXIV
python run_SIGNplus.py \
    --dataset 'arxiv' \
    --seed 42 \
    --optimizer_lr 0.001 \
    --optimizer_decay 0.0 \
    --epochs 1000 \
    --hidden_channel 512 \
    --dropout 0.5 \
    --input_dropout 0.1 \
    --K 2 \
    --batch_norm 0 \
    --batch_size 10000 \
    --n_fflayers 2 \
    --n_runs $num_runs \
    --return_results 1

# PRODUCTS
python run_SIGNplus.py \
    --dataset 'products' \
    --seed 42 \
    --optimizer_lr 0.001 \
    --optimizer_decay 0.0 \
    --epochs 1000 \
    --hidden_channel 512 \
    --dropout 0.4 \
    --input_dropout 0.1 \
    --K 2 \
    --batch_norm 0 \
    --batch_size 50000 \
    --n_fflayers 2 \
    --n_runs $num_runs \
    --return_results 1

# # PRODUCTS
# python run_SIGNplus.py \
#     --dataset 'products' \
#     --seed 42 \
#     --optimizer_lr 0.09911 \
#     --optimizer_decay 0.05004 \
#     --epochs 10 \
#     --hidden_channel 579 \
#     --dropout 0.3852 \
#     --input_dropout 0.1 \
#     --K 2 \
#     --batch_norm 1 \
#     --batch_size 1338 \
#     --n_fflayers 2 \
#     --n_runs $num_runs \
#     --return_results 1

echo '++++++++++++++++++++++++++++++++++++++++++++++++++++'
END=`date +%s`;

let DIFF=END-START
let HOURS=DIFF/3600
let MINUTES=(DIFF/60)%60

printf 'TOTAL RUNTIME = %d hours %02d minutes\n' $HOURS $MINUTES
echo '++++++++++++++++++++++++++++++++++++++++++++++++++++'